using UnityEngine;
using System.Collections;
using System.Collections.Generic;


public class OtherController : MonoBehaviour {

  private Dictionary<string, GameObject> map_;
  private FunapiUtil funapiUtil_;
  private Main main_;


  // Called by Funapi Operator
  void Start() {
    map_ = new Dictionary<string, GameObject>();
    main_ = (Main)GameObject.Find("Game").GetComponent("Main");
    funapiUtil_ = (FunapiUtil)GameObject.Find("NetworkManager").
        GetComponent("FunapiUtil");
  }

  void Update() {
    if (main_.loginComplete)
      SyncOthers();
  }

  // Called by Funapi Operator
  private void SyncOthers() {
    // read only
    Dictionary<string, FunapiObject> players = funapiUtil_.world.objectMap;

    // remove no exist player   map -> players
    // find..
    List<string> key = new List<string>();
    foreach(KeyValuePair<string, GameObject> pair in map_) {
      if (!players.ContainsKey(pair.Key))
        key.Add(pair.Key);
    }

    // delete..
    foreach(string str in key) {
      Destroy(map_[str]);
      map_.Remove(str);
    }

    // insert or update player   players -> map
    foreach(KeyValuePair<string, FunapiObject> pair in players) {
      if (pair.Key == main_.username)
        continue;

      GameObject other = null;
      float fx = 0.0f;
      float fy = 0.0f;
      float fz = 0.0f;
      if (pair.Value.posX.Length > 0)
        fx = float.Parse(pair.Value.posX);
      if (pair.Value.posY.Length > 0)
        fy = float.Parse(pair.Value.posY);
      if (pair.Value.posZ.Length > 0)
        fz = float.Parse(pair.Value.posZ);
      if (!map_.ContainsKey(pair.Key)) {
        other = GameObject.CreatePrimitive(PrimitiveType.Cube);
        other.transform.position = new Vector3(fx, fy, fz);
        map_.Add(pair.Key, other);
      } else {
        other = map_[pair.Key];
        other.transform.position = new Vector3(fx, fy, fz);
      }
    }
  }
}
